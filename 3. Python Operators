

////////////////////////////////////////////////////////////////////////////////
ARITHMETIC OPERATOR
////////////////////////////////////////////////////////////////////////////////

+ | Addition
- | Subtraction
* | Multiplication
/ | Division
** | Exponent "multiply by itself"
// | Floor Division / Truncation "vice versa of modulas, disregard the remainder, whole number only"
% | Modulus "getting only the remainder of divide number"
:= | Walrus
      
& | Biwise and
| | Biwise or
~ | Biwise not
^ | Biwise xor

a = 5
a += 5 
print(a) # '+=' is 5 + 5 = 10

b = 5
b **= 5
print(b) # '**=' is 5 ** 5 = 3125

////////////////////////////////////////////////////////////////////////////////
COMPARISON OPERATOR
////////////////////////////////////////////////////////////////////////////////

A comparison operator comapares its operands and returns a Boolean value True or False
it can be used to compare strings, numbers, Booleans and other objects

> | Greater than
< | Less than
>= | Greater than or equal to
<= | Less than or equal to
== | Equality
!= | Not Equal / Inequality

a = 8
b = 10

result = a == b
print(result) # false

result = a != b
print(result) # true

result = a < b
print(result) # true

print(13==13) # True
print(15!=8) # True
print(6<8) # True
print(18>21) # False
____________________________________
SAMPLE: CONDITION/CONTROL STATEMENTS
____________________________________
if a == b:
    print('NICE')
elif a < b:          #'elif' means else if, another if declaration or true statements
    print('SUS')
else :
    print('AMOGUS')

////////////////////////////////////////////////////////////////////////////////
ASSIGNMENT OPERATOR
////////////////////////////////////////////////////////////////////////////////

OPERATOR      EXAMPLE         SAME AS
=		  x = 5		 x = 5
+=            x += 5           x = x + 5
-=            x -= 5           x = x - 5
*=            x *= 5           x = x * 5
/=            x /= 5           x = x / 5
**=           x **= 5		 x = x ** 5
%=            x %= 5		 x = x % 5
//=           x //= 5	       x = x // 5

____________________________________
SAMPLES
____________________________________
x = 4
x += 3 # 4+3
print(x) # 7

x += 3
x = 4
print(x) # 4, because the x "+=" 3 is at the bottom

x = 'hello '
y = 'rye!'
x += y
print(x) # hello rye!

////////////////////////////////////////////////////////////////////////////////
LOGICAL OPERATOR
////////////////////////////////////////////////////////////////////////////////

and | Logical and
or  | Logical or
not | Logical not

'and' is majority FALSE*
• T and F is F
• F and F is F
• T and T is T
• T and T and T and F is F

'or' is majority TRUE*
• T or F is T
• F or F is F
• T or T is T
• T or T or T or F is T

'not' is the vice versa*
• True become False
• False become True

____________________________________
SAMPLE 1
____________________________________

rye_balance = 58
bscs_balance = 64

#                       T,                         T,                     F               = false: because of 'and'
result1 = (rye_balance < bscs_balance) and (bscs_balance != 64) and (rye_balance <= 678)
print(result1)

#                       F,                 T,                  T,                  = true: because of 'or'
result2 = (541 <= rye_balance) or (65 > bscs_balance) or (not(bscs_balance != 64))
print(result2)

#                       F,                 T,                  T,                  = true: because of 'or' is first to declare operator than 'and'
result3 = (541 <= rye_balance) or (65 > bscs_balance) and (not(bscs_balance != 64))
print(result3)

____________________________________
SAMPLE 2
____________________________________

LOGICAL AND

x = 4
num2 = (x > 3) and (8 < x)
print(num2) # False

num = (5 == 5) and (4 == 4)
print(num) # True

LOGICAL OR

num = (5 == 5) or (4 == 5)
print(num) # True

num2 = (10 > 5) or (4 < 8)
print(num2) # True

num3 = (10 > 20) or (40 < 30)
print(num3) # False

LOGICAL NOT

print(not(False)) # True

expr = not(10 > 20)
print(expr) # True

expr = not(10 == 10)
print(expr) # False
