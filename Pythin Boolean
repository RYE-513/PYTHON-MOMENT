
# TYPE CONVERSIION

print(type("Microsoft"))
print(type("513"))
print(type(True))

if True:  # Constantt true
    print("amogus")
    
a = 4
b = 1

if a > b : # 4 > 1
    print("a is greater than b") # True  condition
    
    
boolean_value = a > b # a = 4, b = 1
print(boolean_value) # True

if boolean_value:
    print("a is greater than b")
    
print() ####################################################################################    

def are_you_sad(is_rainy, has_umbrella):
    # constatnt true. "is_rainy" is "true". not keyword vice versa of true as "false"
    if is_rainy and not has_umbrella: # Complex. if is_rainy == True and has_umbrella == False. 
        return True
    else:
        return False

def are_you_sad(is_rainy, has_umbrella): # Simpified
    return is_rainy and not has_umbrella
    
print(are_you_sad(True, True)) # False
print(are_you_sad(False, False)) # False
print(are_you_sad(True, False)) # True
print(are_you_sad(False, True)) # False


print() ####################################################################################

def c_greater_than_d_plus_e(c, d, e):
    if c > d + e:
        return True
    else:
        return False
        
def c_greater_than_d_plus_e(c, d, e):
    return c > d + e
        
print(c_greater_than_d_plus_e(3, 1, 1)) # 3 > 2
print(c_greater_than_d_plus_e(3, 1, 2)) # 3 > 3 
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
